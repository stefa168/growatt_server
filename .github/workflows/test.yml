name: "Test"

on:
  pull_request:
  push:

env:
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

jobs:
#  check:
#    name: "Cargo check"
#    runs-on: "ubuntu-latest"
#    steps:
#      - name: "Check out the repo"
#        uses: actions/checkout@v3
#
#      - uses: "actions-rs/toolchain@v1"
#        with:
#          profile: "minimal"
#          toolchain: "stable"
#          override: true
#
#      - uses: "actions-rs/cargo@v1"
#        with:
#          command: "check"
  test:
    name: "Cargo test"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test --all-features

  formatting:
    name: "Cargo format"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        # Ensure rustfmt is installed and setup problem matcher
        with:
          components: rustfmt
      - name: Rustfmt check
        uses: actions-rust-lang/rustfmt@v1

  clippy:
    name: "Cargo clippy"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup component add clippy
      - run: cargo clippy

